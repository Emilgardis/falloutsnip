using System;
using System.Xml;
using System.Collections;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Linq;
// 
// This source code was auto-generated by xsd, Version=4.0.30319.1.
// 
namespace TESVSnip.Data {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Group {
        
        ///// <remarks/>
        //[System.Xml.Serialization.XmlElementAttribute("Subrecord")]
        //public List<Subrecord> Subrecords = new List<Subrecord>();
        ///// <remarks/>
        //[System.Xml.Serialization.XmlElementAttribute("Group")]
        //public List<Group> Groups = new List<Group>();

        [System.Xml.Serialization.XmlElementAttribute("Group", typeof(Group))]
        [System.Xml.Serialization.XmlElementAttribute("Subrecord", typeof(Subrecord))]
        public ArrayList Items = new ArrayList();


        [System.Xml.Serialization.XmlIgnore]
        public IEnumerable<Subrecord> Subrecords { get { return Items.OfType<Subrecord>(); } }

        [System.Xml.Serialization.XmlIgnore]
        public IEnumerable<Group> Groups { get { return Items.OfType<Group>(); } }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string id = "";

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string name = "";

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string desc = "";

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int optional = 0;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int repeat = 0;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Subrecord {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Element", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public List<SubrecordElement> Elements = new List<SubrecordElement>();
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string desc;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int optional;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int repeat;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool notininfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int condid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string condition;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string condvalue;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int size;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool usehexeditor;

        public Subrecord() {
            this.desc = "";
            this.optional = 0;
            this.repeat = 0;
            this.notininfo = false;
            this.condid = 0;
            this.condition = "";
            this.condvalue = "";
            this.size = 0;
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class SubrecordElement {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string options;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool hexview;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string reftype;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool multiline;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int condid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool notininfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int repeat;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string flags;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int optional;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string refid;

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int size;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string desc = "";

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int group = 0;       


        public SubrecordElement() {
            this.hexview = false;
            this.reftype = "";
            this.multiline = false;
            this.condid = 0;
            this.notininfo = false;
            this.repeat = 0;
            this.flags = "";
            this.optional = 0;
            this.refid = "";
            this.size = 0;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Records {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Group", typeof(Group))]
        [System.Xml.Serialization.XmlElementAttribute("Record", typeof(RecordsRecord), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Subrecord", typeof(Subrecord))]
        public ArrayList Items = new ArrayList();
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class RecordsRecord {
        
        ///// <remarks/>
        //[System.Xml.Serialization.XmlElementAttribute("Subrecord")]
        //public List<Subrecord> Subrecords = new List<Subrecord>();
        ///// <remarks/>
        //[System.Xml.Serialization.XmlElementAttribute("Group")]
        //public List<Group> Groups = new List<Group>();

        [System.Xml.Serialization.XmlIgnore]
        public IEnumerable<Subrecord> AllSubrecords { get { return GetSubrecords(Items); } }
        

        [System.Xml.Serialization.XmlIgnore]
        public IEnumerable<Subrecord> Subrecords { get { return Items.OfType<Subrecord>(); } }

        [System.Xml.Serialization.XmlIgnore]
        public IEnumerable<Group> Groups { get { return Items.OfType<Group>(); } }

        [System.Xml.Serialization.XmlElementAttribute("Group", typeof(Group))]
        [System.Xml.Serialization.XmlElementAttribute("Subrecord", typeof(Subrecord))]
        public ArrayList Items = new ArrayList();
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string desc;
        
        public RecordsRecord() {
            this.desc = "";
        }

        static IEnumerable<Subrecord> GetSubrecords(ICollection itr)
        {
            foreach (var item in itr)
            {
                if (item is Subrecord)
                {
                    yield return (Subrecord)item;
                }
                else if (item is Group)
                {
                    foreach (var itm in GetSubrecords(((Group)item).Items))
                        yield return itm;
                }
            }
        }

    }

}
